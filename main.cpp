#include <iostream>
#include "Complex.h"
#include "Complex.cpp"

//using namespace std;
int main()
{

   complex z1;
    z1.read();
    complex z2;
    z2.read();
    std::string number;
    number=ToString(z2);
    std::cout<<"Convert=";
    std::cout<<number<<"\n";
    std::cout<<ToString(z1)<<"\n";
    complex z3;
    z3=+(z1);
    z3.print();
    std::cout<<"\n";
    complex z4;
    z4=-(z1);
    z4.print();
    std::cout<<"\n";
    complex z5;
    z5=z1+z2;
    z5.print();
    std::cout<<"\n";
    complex z6;
    z6=z1-z2;
    z6.print();
    std::cout<<"\n";
    complex z7;
    double k1;
    std::cout<<"double1=";
    std::cin>>k1;
    z7=z1+k1;
    z7.print();
    std::cout<<"\n";
    complex z8;
    double k2;
    std::cout<<"double2=";
    std::cin>>k2;
    z8=k2+z1;
    z8.print();
    std::cout<<"\n";
    complex z9;
    z9=z1-k1;
    z9.print();
    std::cout<<"\n";
    complex z10;
    z10=k2-z1;
    z10.print();
    std::cout<<"\n";
    complex z11;
    z11=z1*z2;
    z11.print();
    std::cout<<"\n";
    complex z12;
    z12=z1*k1;
    z12.print();
    std::cout<<"\n";
    complex z13;
    z13=k2*z1;
    z13.print();
    std::cout<<"\n";
    complex z14;
    z14=z1/z2;
    z14.print();
    std::cout<<"\n";
    complex z15;
    z15=z1/k1;
    z15.print();
    std::cout<<"\n";
    complex z16;
    z16=k2/z1;
    z16.print();
    std::cout<<"\n";
    complex z17;
    int n;
    std::cout<<"Puterea este:";
    std::cin>>n;
    std::cout<<"\n";
    z17=z1^n;
    z17.print();
    std::cout<<"\n";
    complex z18;
    z18=(z1!=z2);
    complex z18_double;
    double k_dif;
    std::cout<<"doublek_dif=";
    std::cin>>k_dif;
    z18_double=(z1!=k_dif);
    z18_double.print();
    std::cout<<"\n";
    complex z19;
    z19=(z1==z2);
    complex z20;
    z20=(z1=z2);
    z20.print();
    std::cout<<"\n";
    complex z21;
    z21=(z1+=z2);
    z21.print();
    std::cout<<"\n";
    complex z22;
    double k3;
    std::cout<<"double1=";
    std::cin>>k3;
    z22=z1+k3;
    z22.print();
    std::cout<<"\n";
    complex z23;
    z23=(z1-=z2);
    z23.print();
    std::cout<<"\n";
    complex z24;
    double k4;
    std::cout<<"double4=";
    std::cin>>k4;
    z24=z1-k3;
    z24.print();
    std::cout<<"\n";
    complex z_produs;
    z_produs=(z1*=z2);
    z_produs.print();
    std::cout<<"\n";
    complex z_impartire;
    z_impartire=(z1/=z2);
    z_impartire.print();
    std::cout<<"\n";
    complex z_impartire2;
    double k5;
    std::cout<<"double5=";
    std::cin>>k5;
    z_impartire2=(z1/=k5);
    z_impartire2.print();
    std::cout<<"\n";
    double m;
    complex z_produs2;
    double k_produs;
    std::cout<<"doubleprodus=";
    std::cin>>k_produs;
    z_produs2=(z1*=k_produs);
    z_produs2.print();
    std::cout<<"\n";
    complex z_conj;
    z_conj.Conj(z1);
    z_conj.print();
    std::cout<<"\n";
    m=abs(z1);
    std::cout<<"Modulul este="<<m;
    complex z_atr;
    z_atr=(z1=z2);
    z_atr.print();
    return 0;
}

